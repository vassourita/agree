type User {
  id: ID!
  tag: Int!
  name: String!
  email: String!
  status: String
  avatarUrl: String
  createdAt: String!
}

input CreateAccountInput {
  name: String!
  email: String!
  password: String!
}

type CreateAccountResponse {
  token: String!
  user: User!
}

input UpdateAccountInput {
  name: String
  status: String
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  token: String!
}

type Mutation {
  createAccount(data: CreateAccountInput): CreateAccountResponse!
  updateAccount(data: UpdateAccountInput): User!
  uploadAvatar(file: Upload): User!
  login(data: LoginInput): LoginResponse!
}

type Query {
  me: User!
  userById(id: ID!): User
  userByNameTag(nameTag: String!): User
  users: [User!]!
}
