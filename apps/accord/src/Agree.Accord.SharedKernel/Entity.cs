using System;
namespace Agree.Accord.SharedKernel
{
    /// <summary>
    /// Represents a entity of any kind. As it is a abstract class, it must be implement by another class to be used.
    /// </summary>
    public abstract class Entity
    {
        /// <summary>
        /// Represents a entity of any kind. As it is a abstract class, it must be implement by another class to be used.
        /// <para>
        /// This constructor method sets the <c>Id</c>, <c>CreatedAt</c> and <c>UpdatedAt</c> values.
        /// </para>
        /// </summary>
        protected Entity()
        {
            Id = Guid.NewGuid();
            CreatedAt = DateTime.UtcNow;
            UpdatedAt = DateTime.UtcNow;
        }

        /// <summary>
        /// Updates the <c>UpdatedAt</c> property. Must be called whenever another property is updated.
        /// </summary>
        protected void Update()
        {
            UpdatedAt = DateTime.UtcNow;
        }

        /// <summary>
        /// A unique identifier. Auto-generated by the class constructor.
        /// </summary>
        /// <value>Gets the Id value.</value>
        public Guid Id { get; private set; }

        /// <summary>
        /// The date and time this entity was created
        /// </summary>
        /// <value>Gets the CreatedAt value.</value>
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// The date and time this entity was last updated
        /// </summary>
        /// <value>Gets the UpdatedAt value.</value>
        public DateTime UpdatedAt { get; private set; }
    }
}